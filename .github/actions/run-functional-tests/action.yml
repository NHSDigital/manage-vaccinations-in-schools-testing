name: 'Run Tests'
description: 'Execute tests'
inputs:
  tests:
    default: ''
  accessibility_tests:
    default: 'false'
  device:
    required: true
  base_url:
    required: true
  programmes_enabled:
    default: 'FLU,HPV,MENACWY,MMR,TD_IPV'
  screenshot_all_steps:
    required: true
  enable_reruns:
    default: 'true'
  set_feature_flags:
    default: 'false'
  additional_feature_flags:
    default: ''
  playwright_cache_hit:
    required: true

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Install Playwright if not cached
      if: inputs.playwright_cache_hit != 'true'
      run: uv run playwright install
      shell: bash

    - name: Install Playwright dependencies if using webkit
      if: inputs.device == 'Desktop Safari' || inputs.device == 'iPad (gen 7) landscape' || inputs.device == 'iPhone 15'
      run: uv run playwright install-deps webkit
      shell: bash

    - name: Choose test suite to run
      id: marker
      run: |
        if [ "${{ inputs.accessibility_tests }}" = "true" ]; then
          echo "marker=accessibility" >> $GITHUB_OUTPUT
        else
          echo "marker=not accessibility" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Determine if reruns are enabled
      id: reruns
      run: |
        if [ "${{ inputs.enable_reruns }}" = "true" ]; then
          echo "reruns=--reruns 2" >> $GITHUB_OUTPUT
        else
          echo "reruns=" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Run tests
      run: uv run pytest ${{ steps.reruns.outputs.reruns }} -m "${{ steps.marker.outputs.marker }}" --device "${{ inputs.device }}" ${{ inputs.tests }}
      shell: bash
      env:
        BASE_URL: ${{ inputs.base_url }}
        PROGRAMMES_ENABLED: ${{ inputs.programmes_enabled }}
        SCREENSHOT_ALL_STEPS: ${{ inputs.screenshot_all_steps }}
        SET_FEATURE_FLAGS: ${{ inputs.set_feature_flags }}
        ADDITIONAL_FEATURE_FLAGS: ${{ inputs.additional_feature_flags }}
        BASIC_AUTH_TOKEN: ${{ env.BASIC_AUTH_TOKEN }}
        IMMS_BASE_URL: ${{ env.IMMS_BASE_URL }}
        IMMS_API_KEY: ${{ env.IMMS_API_KEY }}
        IMMS_API_KID: ${{ env.IMMS_API_KID }}
        IMMS_API_PEM: ${{ env.IMMS_API_PEM }}
