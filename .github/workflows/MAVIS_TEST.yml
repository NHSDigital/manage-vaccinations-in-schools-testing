# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run MAVIS tests on TEST

on:
  push:
    branches: [ "main","DoublesMain" ]
  pull_request:
    branches: [ "main","DoublesMain" ]
  schedule:
    - cron: "0 7 * * *"

permissions:
  contents: write

jobs:
  test:

    runs-on: ubuntu-latest
    env:
      TZ: "Europe/London"
    strategy:
      matrix:
        location: ['UK']


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        playwright install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test on Chromium
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::Chromium"
        pytest --browser_or_device chromium
        echo "::endgroup::"
    - name: Test on Chrome
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::Chrome"
        pytest --browser_or_device chrome
        echo "::endgroup::"
    # - name: Test on Firefox
    #   env:
    #     HEADLESS: ${{ vars.HEADLESS }}
    #     CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
    #     BASE_URL: ${{ vars.BASE_URL }}
    #     RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
    #     RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
    #     NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
    #     NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
    #     SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
    #     SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
    #     BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    #     BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
    #     API_TOKEN: ${{ secrets.API_TOKEN }}
    #   run: |
    #     echo "::group::Firefox"
    #     pytest --browser_or_device firefox
    #     echo "::endgroup::"
    - name: Test on Edge
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::Edge"
        pytest --browser_or_device msedge
        echo "::endgroup::"
    - name: Test on iPhone 14
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::iPhone 14"
        pytest -m mobile --browser_or_device iphone_14
        echo "::endgroup::"
    - name: Test on iPhone 15
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::iPhone 15"
        pytest -m mobile --browser_or_device iphone_15
        echo "::endgroup::"
    - name: Test on iPad Gen 7
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::iPad Gen 7"
        pytest -m mobile --browser_or_device ipad_7
        echo "::endgroup::"
    - name: Test on Google Pixel 5
      env:
        HEADLESS: ${{ vars.HEADLESS }}
        CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
        BASE_URL: ${{ vars.BASE_URL }}
        RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
        RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
        NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
        NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
        SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
        SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
      run: |
        echo "::group::Pixel 5"
        pytest -m mobile --browser_or_device pixel_5
        echo "::endgroup::"
    - name: Upload report
      uses: actions/upload-artifact@v4
      with:
        name: allure-reports
        path: reports
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: screenshots
