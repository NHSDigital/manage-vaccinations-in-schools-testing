# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run MAVIS tests on TEST

on:
  schedule:
    - cron: "0 3 * * *"

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TZ: "Europe/London"
    strategy:
      matrix:
        location: ["UK"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: .tool-versions
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          playwright install
          playwright install-deps
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test on Chromium
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Chromium"
          pytest --browser_or_device chromium
          echo "::endgroup::"
      - name: Test on Chrome
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Chrome"
          pytest --browser_or_device chrome
          echo "::endgroup::"
      - name: Test on Firefox
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Firefox"
          pytest --browser_or_device firefox
          echo "::endgroup::"
      - name: Test on Edge
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Edge"
          pytest --browser_or_device msedge
          echo "::endgroup::"
      - name: Test on iPhone 14
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::iPhone 14"
          pytest -m mobile --browser_or_device iphone_14
          echo "::endgroup::"
      - name: Test on iPhone 15
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::iPhone 15"
          pytest -m mobile --browser_or_device iphone_15
          echo "::endgroup::"
      - name: Test on iPad Gen 7
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::iPad Gen 7"
          pytest -m mobile --browser_or_device ipad_7
          echo "::endgroup::"
      - name: Test on Samsung Galaxy S9+
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Samsung Galaxy S9+"
          pytest -m mobile --browser_or_device s9+
          echo "::endgroup::"
      - name: Test on Google Pixel 7
        if: always()
        env:
          HEADLESS: ${{ vars.HEADLESS }}
          CAPTURE_SCREENSHOTS: ${{ vars.CAPTURE_SCREENSHOTS }}
          BASE_URL: ${{ vars.BASE_URL }}
          RESET_ENDPOINT: ${{ vars.RESET_ENDPOINT }}
          RESET_ENV_BEFORE_EXECUTION: ${{vars.RESET_ENV_BEFORE_EXECUTION}}
          SLOW_MOTION: ${{ vars.SLOW_MOTION }}
          NURSE_PASSWORD: ${{ secrets.NURSE_PASSWORD }}
          NURSE_USERNAME: ${{ secrets.NURSE_USERNAME }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          SUPERUSER_USERNAME: ${{ secrets.SUPERUSER_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          echo "::group::Google Pixel 7"
          pytest -m mobile --browser_or_device pixel_7
          echo "::endgroup::"
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-reports
          path: reports
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots
